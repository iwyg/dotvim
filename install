#!/bin/sh

# exit script if golang is not available
if [ "which go" == "" ]; then
	echo "install go lang first"
	exit 1
fi

VIMDIR="`pwd`"

# create temp directory
mkdir -p tmp

# install pathogen plugin manager
#curl -LSso ~/.vim/autoload/pathogen.vim https://tpo.pe/pathogen.vim

# install submodules
git submodule update --init --recursive

## install powerline if not already installed 
## switched from powerline to airline
#if [ "which powerline" == "" ]; then
#	pip install powerline-status
#else
#	echo "powerline alread installed"
#fi

# install the markdown preview
if [ "which livedown" == "" ]; then
	npm install -g livedown
else
	echo "livedown alread installed"
fi

# install composer
if [ "which composer" == "" ]; then
	cd tmp
	curl -sS https://getcomposer.org/installer | php
	mv composer.phar /usr/local/bin/composer
	cd -
	mkdir ~/.composer
	echo "{\"require\": {}}" > ~/.composer/composer.json
else
	echo "composer already installed"
fi

# install required php utilities
composer global require squizlabs/php_codesniffer techlivezheng/phpctags fabpot/php-cs-fixer
# install required javascript  utilities
npm install -g jsctags


mv $VIMDIR/vimrc $VIMDIR/vimconfig
mv $VIMDIR/gvimrc $VIMDIR/gvimconfig
rm ~/.vimrc
rm ~/.gvimrc

# link bundles to the bundles_loaded firectory 
mkdir -p $VIMDIR/bundles_loaded
cd bundles_loaded
ln -s ../bundle/* .
cd -

# install the ANSI Escape Sequence plugin
curl -Sso $VIMDIR/tmp/AnsiEsc.vba.gz http://www.vim.org/scripts/download_script.php?src_id=14498
cd tmp
vim AnsiEsc.vba.gz -c ':so %' -c ':q'
cd -

# compile binaries for YCM
cd bundle/YouCompleteMe
git submodule update --init --recursive
./install.py --clang-completer --gocode-completer
cd -

# move back configfiles
mv $VIMDIR/vimconfig ~/.vim/vimrc
mv $VIMDIR/gvimconfig ~/.vim/gvimrc
# symlink  configuration files
(ln -s $VIMDIR/vimrc ~/.vimrc && ln -s $VIMDIR/gvimrc ~/.gvimrc) || ln log

# cleanup
rm -rf tmp
